#ACTION {%1-EBG31@ %2}
{
	#line {gag};
	#script {unencryptedMessage} {echo "%2" | rev | scripts/msgcrypt.sh | $sed "s/^'//"};
	#variable {unencryptedMessage} {${unencryptedMessage[1]}};
	#echo {%1${unencryptedMessage}'};
	#if {{$channelSending} != {true}}
	{
		PLAY cryptmsg
	}
}
{8}

#ACTION {^You {say|tell .+|shout}, '%2'$}
{
	#if {{$channelSending} != {true}}
	{
		#switch {{%1}}
		{
			#case {{say}}
			{
				SYNTH_PLAY saySendSound;
				Add_Channel_Event all %0;
				Add_Channel_Event say %0
			};
			#case {{tell %*}}
			{
				SYNTH_PLAY tellSendSound;
				Add_Channel_Event all %0;
				Add_Channel_Event tell %0
			};
			#case {{shout}}
			{
				SYNTH_PLAY shoutChannelSound;
				Add_Channel_Event all %0
			}
		}
	}
}
{8}

#ACTION {^[ %* {has switched to|used alternate to switch to} %* ]$}
{
	#if {{$channelSending} != {true}}
	{
		SYNTH_PLAY switchCharacterSound;
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{8}

#ACTION {^[ %1 has been {demote|promote}d to %* ]$}
{
	#if {{$channelSending} != {true}}
	{
		PLAY miscellaneous/%2;
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{8}

#ACTION {^[ %1 has entered the game ]$}
{
	#if {{$channelSending} != {true}}
	{
		PLAY miscellaneous/player_enter;
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{8}

#ACTION {^[ %1 has {left|quit} the game{\.?} ]$}
{
	#if {{$channelSending} != {true}}
	{
		PLAY miscellaneous/player_leave;
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{8}

#ACTION {^[/death]: %1 has been {executed|killed} by %*$}
{
	#if {{$channelSending} != {true}}
	{
		PLAY miscellaneous/death;
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{8}

#ACTION {^[/death]: %1 has {died|been slain} at %*$}
{
	#if {{$channelSending} != {true}}
	{
		PLAY miscellaneous/death;
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{8}

#ACTION {%* whispers to you, '%*'$}
{
	#if {{$channelSending} != {true}}
	{
		SYNTH_PLAY sayReceiveSound;
		Add_Channel_Event all %0;
		Add_Channel_Event say %0
	}
}
{9}

#ACTION {^%* {says|tells you|shouts}, '%3'$}
{
	#if {{$channelSending} != {true}}
	{
		#switch {{%2}}
		{
			#case {{says}}
			{
				SYNTH_PLAY sayReceiveSound;
				Add_Channel_Event all %0;
				Add_Channel_Event say %0
			};
			#case {{tells you}}
			{
				SYNTH_PLAY tellReceiveSound;
				Add_Channel_Event all %0;
				Add_Channel_Event tell %0
			};
			#case {{shouts}}
			{
				SYNTH_PLAY shoutChannelSound;
				Add_Channel_Event all %0
			}
		}
	}
}
{9}

#ACTION {^A tiny voice booms across the hills, '%*'$}
{
	#if {{$channelSending} != {true}}
	{
		SYNTH_PLAY shoutChannelSound;
		Add_Channel_Event all %0
	}
}
{9}

#ACTION {^Welcome to your EmpireMUD!%sPrepare to face your destiny!$}
{
	/join cowsay;
	/join music;
	#variable {busy} {false}
}
{9}

#ACTION {^You are too exhausted to follow.$}
{
	gt Out of movement!
}
{9}

#ACTION {^You improve your {Battle|High Sorcery|Natural Magic|Stealth|Survival|Trade|Vampire} skill to %d.$}
{
	#if {{$channelSending} != {true}}
	{
		#format {i} {%l} {%1};
		#replace {i} { } {_};
		PLAY improve/$i;
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{9}

#ACTION {^You sense that it came from %*'s mini-Mike.$}
{
	#if {{$channelSending} != {true}}
	{
		Add_Channel_Event all %0
	}
}
{9}

#ACTION {^You whisper to %*, '%*'$}
{
	#if {{$channelSending} != {true}}
	{
		SYNTH_PLAY saySendSound;
		Add_Channel_Event all %0;
		Add_Channel_Event say %0
	}
}
{9}

#ACTION {^Your daily quests and bonus experience have reset!$}
{
	#if {{$channelSending} != {true}}
	{
		PLAY skills/reset;
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{9}

#ACTION {^Your trading post item '%*' has sold for %* coins.$}
{
	#if {{$channelSending} != {true}}
	{
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{9}

#ACTION {^[ %* ]$}
{
	#if {{$channelSending} != {true}}
	{
		Add_Channel_Event all %0;
		Add_Channel_Event misc %0
	}
}
{9}

#ACTION {^[/%S{]| }%*}
{
	#if {{$channelSending} != {true}}
	{
		#if {&%1ChannelSound}
		{
			SYNTH_PLAY %1ChannelSound
		};
		#else
		{
			SYNTH_PLAY defaultChannelSound
		};
		Add_Channel_Event all %0;
		#if {{%1} == {{cowsay|music|ooc}}}
		{
			Add_Channel_Event %1 %0
		}
	}
}
{9}

#ACTION {^[{EMPIRE|gsay|IMMORTAL}%*}
{
	#if {{$channelSending} != {true}}
	{
		SYNTH_PLAY %1ChannelSound;
		Add_Channel_Event all %0;
		#if {{%1} == {gsay}}
		{
			Add_Channel_Event party %0
		};
		#elseif {{%1} == {IMMORTAL}}
		{
			Add_Channel_Event immortal %0
		};
		#else
		{
			Add_Channel_Event empire %0
		}
	}
}
{9}

#ALIAS {^pimptell %S %2}
{
	#script {echo -n "tell %1 "; curl --connect-timeout 10 -s --data-urlencode English="%2" --data-urlencode submit="Talk Like a Pimp " http://joel.net/EBONICS/translator/ | grep -A9 '<div class="bubble1 comicfont">' | $sed -e '/<div/d' -e '/<\/div>/d' -e "s/&#39;/'/g" | tr "\n" " "}
}
{8}

#ALIAS {^Add_Channel_Event {all|cowsay|empire|immortal|misc|music|ooc|say|party|tell} %2}
{
	#list {%1List} {insert} {1} {%2};
	#if {{${channelBuffer[$channelBufferIndex]}} == {%1} && {$messageReset} != {true}}
	{
		#math {messageIndex} {$messageIndex+1}
	}
}
{9}

#ALIAS {^away %1}
{
	#variable {awayMessage} {%1};
	#showme {Your away message is set to: $awayMessage}
}
{9}

#ALIAS {^away$}
{
	#variable {awayMessage} {false};
	#showme {away message cleared.}
}
{9}

#ALIAS {^crypt%S %2}
{
	#script {encryptedMessage} {echo "%2" | rev | scripts/msgcrypt.sh};
	#variable {encryptedMessage} {${encryptedMessage[1]}};
	%1 -EBG31@  $encryptedMessage
}
{9}

#ALIAS {^display_channel %w %d}
{
	#variable {channelSending} {true};
	#showme {${%1List[%2]}};
	#variable {channelSending} {false}
}
{9}

#ALIAS {^pimp%+ %2}
{
	#script {echo -n "%1"; curl --connect-timeout 10 -s --data-urlencode English="%2" --data-urlencode submit="Talk Like a Pimp " http://joel.net/EBONICS/translator/ | grep -A9 '<div class="bubble1 comicfont">' | $sed -e '/<div/d' -e '/<\/div>/d' -e "s/&#39;/'/g" | tr "\n" " "}
}
{9}

#MACRO {\e!}
{
	#variable {channelBufferIndex} {0};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e#}
{
	#variable {channelBufferIndex} {2};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e$}
{
	#variable {channelBufferIndex} {3};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e%}
{
	#variable {channelBufferIndex} {4};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e&}
{
	#variable {channelBufferIndex} {6};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e(}
{
	#variable {channelBufferIndex} {8};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e)}
{
	#variable {channelBufferIndex} {9};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e*}
{
	#variable {channelBufferIndex} {7};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e+}
{
	#list {${channelBuffer[$channelBufferIndex]}List} {size} {messageIndex};
	#showme {Moved to top of buffer};
	display_channel $channelBuffer[$channelBufferIndex] $messageIndex
}

#MACRO {\e-}
{
	#variable {messageReset} {false};
	#math {messageIndex} {$messageIndex-1};
	#if {$messageIndex < 1}
	{
		#variable {messageIndex} {1};
		#showme {Bottom of buffer}
	};
	display_channel $channelBuffer[$channelBufferIndex] $messageIndex;
	#undelay {resetMessageIndex};
	#delay {resetMessageIndex} {#var {messageIndex} {1};#var {messageReset} {true}} {20}
}

#MACRO {\e0}
{
	display_channel $channelBuffer[$channelBufferIndex] 10
}

#MACRO {\e1}
{
	display_channel $channelBuffer[$channelBufferIndex] 1
}

#MACRO {\e2}
{
	display_channel $channelBuffer[$channelBufferIndex] 2
}

#MACRO {\e3}
{
	display_channel $channelBuffer[$channelBufferIndex] 3
}

#MACRO {\e4}
{
	display_channel $channelBuffer[$channelBufferIndex] 4
}

#MACRO {\e5}
{
	display_channel $channelBuffer[$channelBufferIndex] 5
}

#MACRO {\e6}
{
	display_channel $channelBuffer[$channelBufferIndex] 6
}

#MACRO {\e7}
{
	display_channel $channelBuffer[$channelBufferIndex] 7
}

#MACRO {\e8}
{
	display_channel $channelBuffer[$channelBufferIndex] 8
}

#MACRO {\e9}
{
	display_channel $channelBuffer[$channelBufferIndex] 9
}

#MACRO {\e=}
{
	#variable {messageReset} {false};
	#list {${channelBuffer[$channelBufferIndex]}List} {size} {i};
	#math {messageIndex} {$messageIndex+1};
	#if {$messageIndex > $i}
	{
		#variable {messageIndex} {$i};
		#showme {Top of buffer}
	};
	display_channel $channelBuffer[$channelBufferIndex] $messageIndex;
	#unvariable {i};
	#undelay {resetMessageIndex};
	#delay {resetMessageIndex} {#var {messageIndex} {1};#var {messageReset} {true}} {20}
}

#MACRO {\e@}
{
	#variable {channelBufferIndex} {1};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e[1;3C}
{
	#if {!&{channelBufferIndex} || $channelBufferIndex >= $totalChannels}
	{
		#variable {channelBufferIndex} {$totalChannels}
	};
	#else
	{
		#math {channelBufferIndex} {$channelBufferIndex + 1}
	};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e^}
{
	#variable {channelBufferIndex} {5};
	#variable {messageIndex} {1};
	#showme {Channel buffer set to $channelBuffer[$channelBufferIndex]}
}

#MACRO {\e_}
{
	#variable {messageIndex} {1};
	#showme {Moved to bottom of buffer};
	display_channel $channelBuffer[$channelBufferIndex] $messageIndex
}

#VARIABLE         {allList}  {}
#VARIABLE         {awayMessage}  {false}
#VARIABLE         {channelBuffer}  {{0}{all}{1}{cowsay}{2}{empire}{3}{immortal}{4}{misc}{5}{music}{6}{ooc}{7}{say}{8}{party}{9}{tell}}
#VARIABLE         {channelBufferIndex}  {0}
#VARIABLE         {channelSending}  {false}
#VARIABLE         {cowsayList}  {}
#VARIABLE         {empireList}  {}
#VARIABLE         {immortalList}  {}
#VARIABLE         {messageIndex}  {1}
#VARIABLE         {messageReset}  {true}
#VARIABLE         {miscList}  {}
#VARIABLE         {musicList}  {}
#VARIABLE         {oocList}  {}
#VARIABLE         {partyList}  {}
#VARIABLE         {sayList}  {}
#VARIABLE         {tellList}  {}
#VARIABLE         {totalChannels}  {9}
