#ALIAS {^Get_Music_Message_String$}
{
	#switch {"$musicPlayer"}
	{
		#nop {Variable order artist, title, and album.};
		#case {"audacious"}
		{
			#script {i} {audtool -Q --current-song-tuple-data artist};
			#format {msg[1]} {%p} {${i[1]}};
			#script {i} {audtool --current-song-tuple-data title};
			#format {msg[2]} {%p} {${i[1]}};
			#script {i} {audtool --current-song-tuple-data album};
			#format {msg[3]} {%p} {${i[1]}}
		};
		#case {"moc"}
		{
			#script {i} {mocp -Q %artist};
			#format {msg[1]} {%p} {${i[1]}};
			#script {i} {mocp -Q %title};
			#format {msg[2]} {%p} {${i[1]}};
			#script {i} {mocp -Q %album};
			#format {msg[3]} {%p} {${i[1]}}
		};
		#case {"m{opidy|pd}"}
		{
			#script {i} {mpc -f %artist% current};
			#format {msg[1]} {%p} {${i[1]}};
			#script {i} {mpc -f %title% current};
			#format {msg[2]} {%p} {${i[1]}};
			#script {i} {mpc -f %album% current};
			#format {msg[3]} {%p} {${i[1]}}
		};
		#case {"pianobar"}
		{
			#script {i} {cut -f 1 -d '\' "$HOME/../pianobar/nowplaying" 2> /dev/null};
			#format {msg[1]} {%p} {${i[1]}};
			#script {i} {cut -f 2 -d '\' "$HOME/../pianobar/nowplaying" 2> /dev/null};
			#format {msg[2]} {%p} {${i[1]}};
			#script {i} {cut -f 3 -d '\' "$HOME/../pianobar/nowplaying" 2> /dev/null};
			#variable {msg[3]} {%p} {${i[1]}}
		};
		#case {"xmms2"}
		{
			#script {i} {xmms2 info | grep artist | cut -d '=' -f2- | sed -e 's/^ *//' -e 's/ *$//'};
			#variable {msg[1]} {${i[1]}};
			#script {i} {xmms2 info | grep title | cut -d '=' -f2- | sed -e 's/^ *//' -e 's/ *$//'};
			#variable {msg[2]} {${i[1]}};
			#script {i} {xmms2 info | grep album | cut -d '=' -f2- | sed -e 's/^ *//' -e 's/ *$//'};
			#variable {msg[3]} {${i[1]}}
		};
		#default
		{
			#script {i} {cmus-remote -Q | sed -n 's/^tag artist //p'};
			#format {msg[1]} {%p} {${i[1]}};
			#script {i} {cmus-remote -Q | sed -n 's/^tag title //p'};
			#format {msg[2]} {%p} {${i[1]}};
			#script {i} {cmus-remote -Q | sed -n 's/^tag album //p'};
			#format {msg[3]} {%p} {${i[1]}}
		}
	};
	#variable {newAutoTitleString} {${msg[1]} - ${msg[2]}};
	#replace {newAutoTitleString} {;} { - };
	#replace {newAutoTitleString} {รถ} {o};
	#variable {msg} {"${msg[2]}" by "${msg[1]}" from "${msg[3]}"};
	#replace {msg} {;} { - };
	#replace {msg} {รถ} {o};
	#regexp {$msg} {""} {#switch {"$musicPlayer"}{#case {"cmus"} {#script {msg} {basename "$(cmus-remote -Q | head -2 | tail -1)" | rev | cut -d '.' -f2- | rev}};#case {"mpd"} {#script {msg} {mpc current | sed 's/\// - /g' | rev | cut -d '.' -f2- | rev}};#case {"xmms2"} {#script {msg} {basename "$(xmms2 info | tail -n 1 | sed 's/^\[server\] url = file:\/\/\///' | rev | cut -d '.' -f2- | rev)"}};};#variable {msg} {${msg[1]}};#replace {msg} {+} { };#replace {msg} {\%27} {'};#replace {msg} {\%28} {(};#replace {msg} {\%29} {)};#replace {msg} {\%2c} {,};#variable {newAutoTitleString} {$msg}}
}
{9}

#ALIAS {^musicplayer %s{audacious|cmus|moc|mopidy|mpc|mpd|pianobar|xmms2}$}
{
	#if {"%2" == "mpc"}
	{
		#variable {musicPlayer} {mpd}
	};
	#else
	{
		#variable {musicPlayer} {%2}
	};
	#showme {music player set to $musicPlayer\.}
}
{9}

#ALIAS {^m{p|po|pos|post} %2}
{
	Get_Music_Message_String;
	%2 Now playing: $msg via $musicPlayer\.
}
{9}

#ALIAS {^{auto|noauto}title$}
{
	#if {"%0" == "autotitle"}
	{
		#showme {Your title will automatically change to currently playing song.};
		#variable {autotitle} {true}
	};
	#else
	{
		#showme {Your title will no longer be automatically set.};
		#unvariable {autotitle}
	}
}
{9}

#ALIAS {^{musicc|musicch|musiccha|musicchan|musicchann|musicchanne|musicchannel} %s%S$}
{
	#variable {channel.music} {%3};
	#echo {Music channel set to %3.}
}
{9}

#ALIAS {mp{l|ly|lyr|lyri|lyric|lyrics} %2}
{
	Get_Music_Message_String;
	#script {scripts/lyrics.sh '%2' "${newAutoTitleString}"}
}
{9}

#MACRO {\e+}
{
	#nop {Increase music player volume};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --set-volume $(($(audtool --get-volume) + 10))}
		};
		#case {"moc"}
		{
			#system {mocp -v +5}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc -q volume +5}
		};
		#case {"pianobar"}
		{
			#system {echo -n ')' > ~/.config/pianobar/ctl}
		};
		#case {"xmms2"}
		{
			#script {i} {xmms2 server config equalizer.preamp | tr -Cd "[:digit:]-"};
			#math {i} {${i[1]} + 1};
			#system {xmms2 server config equalizer.preamp $i}
		};
		#default
		{
			#system {cmus-remote -v +5%}
		}
	}
}

#MACRO {\eB}
{
	#nop {Music player next};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --playlist-advance}
		};
		#case {"moc"}
		{
			#system {mocp -f}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc -q next}
		};
		#case {"pianobar"}
		{
			#system {echo -n 'n' > ~/.config/pianobar/ctl}
		};
		#case {"xmms2"}
		{
			#system {xmms2 next}
		};
		#default
		{
			#system {cmus-remote -n}
		}
	}
}

#MACRO {\eC}
{
	#nop {Music player pause};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --playback-pause}
		};
		#case {"moc"}
		{
			#system {mocp -G}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc -q pause}
		};
		#case {"pianobar"}
		{
			#system {echo -n 'p' > ~/.config/pianobar/ctl}
		};
		#case {"xmms2"}
		{
			#system {xmms2 toggle}
		};
		#default
		{
			#system {cmus-remote -u}
		}
	}
}

#MACRO {\eM}
{
	#if {!&{channel.music}}
	{
		#variable {channel.music} {/music}
	};
	mpost ${channel.music}
}

#MACRO {\eR}
{
	#nop {Music player repeat.};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --playlist-repeat-toggle&&echo "Repeat $(audtool --playlist-repeat-status)."}
		};
		#case {"moc"}
		{
			#system {mocp -O Repeat=yes}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc repeat | grep repeat: | tr -s " " | cut -d " " -f3- | cut -d " " -f-2}
		};
		#case {"xmms2"}
		{
			#system {xmms2 repeat}
		};
		#default
		{
			#system {cmus-remote -R};
			#script {echo "#showme {Cmus $(cmus-remote -Q | grep 'repeat ' | sed 's/true/on/g' | sed 's/false/off/g' | sed 's/set //').}"}
		}
	}
}

#MACRO {\eS}
{
	#nop {Music player randomize tracks.};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --playlist-shuffle-toggle&&echo "Shuffle $(audtool --playlist-shuffle-status)."}
		};
		#case {"moc"}
		{
			#system {mocp -O Shuffle=yes}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc random | grep random: | tr -s " " | cut -d " " -f5- | cut -d " " -f-2}
		};
		#case {"xmms2"}
		{
			#system {xmms2 playlist shuffle;if [ $? -eq 0 ] ; then echo "Playlist shuffled.";fi}
		};
		#default
		{
			#system {cmus-remote -S};
			#script {echo "#showme {Cmus $(cmus-remote -Q | grep 'shuffle' | sed 's/true/on/g' | sed 's/false/off/g' | sed 's/set //').}"}
		}
	}
}

#MACRO {\eU}
{
	#nop {Currently playing track};
	Get_Music_Message_String;
	#showme {$msg\.}
}

#MACRO {\eV}
{
	#nop {Music player stop.};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --playback-stop}
		};
		#case {"moc"}
		{
			#system {mocp -s}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc -q stop}
		};
		#case {"pianobar"}
		{
			#system {echo -n 'S' > ~/.config/pianobar/ctl}
		};
		#case {"xmms2"}
		{
			#system {xmms2 stop}
		};
		#default
		{
			#system {cmus-remote -s}
		}
	}
}

#MACRO {\eX}
{
	#nop {Music player play.};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {if ! ps -C audacious &> /dev/null ; then audacious -Hp &> /dev/null&fi;audtool --playback-play}
		};
		#case {"moc"}
		{
			#system {mocp -p}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc -q play}
		};
		#case {"pianobar"}
		{
			#system {echo -n 'P' > ~/.config/pianobar/ctl}
		};
		#case {"xmms2"}
		{
			#system {xmms2 play}
		};
		#default
		{
			#system {cmus-remote -p}
		}
	}
}

#MACRO {\eZ}
{
	#nop {Music player previous track.};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --playlist-reverse}
		};
		#case {"moc"}
		{
			#system {mocp -r}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc -q prev}
		};
		#case {"xmms2"}
		{
			#system {xmms2 prev}
		};
		#default
		{
			#system {cmus-remote -r}
		}
	}
}

#MACRO {\e\x7B}
{
	#nop {Music player seek backward.};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --playback-seek-relative time -5}
		};
		#case {"moc"}
		{
			#system {mocp -k -5}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc -q seek -5}
		};
		#case {"xmms2"}
		{
			#system {xmms2 seek -5}
		};
		#default
		{
			#system {cmus-remote -k -5}
		}
	}
}

#MACRO {\e\x7D}
{
	#nop {Music player seek forward.};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --playback-seek-relative time 5}
		};
		#case {"moc"}
		{
			#system {mocp -k +5}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc -q seek +5}
		};
		#case {"xmms2"}
		{
			#system {xmms2 seek +5}
		};
		#default
		{
			#system {cmus-remote -k +5}
		}
	}
}

#MACRO {\e_}
{
	#nop {Music player volume down.};
	#switch {"$musicPlayer"}
	{
		#case {"audacious"}
		{
			#system {audtool --set-volume $(($(audtool --get-volume) - 10))}
		};
		#case {"moc"}
		{
			#system {mocp -v -5}
		};
		#case {"{mpd|mopidy}"}
		{
			#system {mpc -q volume -5}
		};
		#case {"pianobar"}
		{
			#system {echo -n '(' > ~/.config/pianobar/ctl}
		};
		#case {"xmms2"}
		{
			#script {i} {xmms2 server config equalizer.preamp | tr -Cd "[:digit:]-"};
			#math {i} {${i[1]} - 1};
			#system {xmms2 server config equalizer.preamp $i}
		};
		#default
		{
			#system {cmus-remote -v -5%}
		}
	}
}

#TICKER           {autotitle}  {#if {"$autotitle" == "true" && "$editorMode" != "true"}{Get_Music_Message_String;#if {"$newAutoTitleString" != "$oldAutoTitleString"}{#var {oldAutoTitleString} {$newAutoTitleString};title $newAutoTitleString;#line {gag}}}}                                                                                                                                                                                                           {1.50}
#VARIABLE         {artist}  {}
#VARIABLE         {lyricStringFormatter}  {}
#VARIABLE         {lyrics}  {}
#VARIABLE         {lyricsUrl}  {}
#VARIABLE         {newAutoTitleString}  {}
#VARIABLE         {song}  {}
